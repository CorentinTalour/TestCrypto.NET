// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestCrytpoServer.EF;

#nullable disable

namespace TestCrytpoServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestCrytpoServer.EF.SecretRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CipherNameB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CipherNotesB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CipherPasswordB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CipherUrlB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Iterations")
                        .HasColumnType("int");

                    b.Property<string>("IvNameB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IvNotesB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IvPasswordB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IvUrlB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaltB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Secrets");
                });

            modelBuilder.Entity("TestCrytpoServer.EF.Vault", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Iterations")
                        .HasColumnType("int");

                    b.Property<string>("OwnerUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaultSaltB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifierB64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vaults");
                });
#pragma warning restore 612, 618
        }
    }
}
